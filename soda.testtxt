A6 TEST DOCUMENTATION
=========================
This assignment introduces tasks with public members, direct communication and high-level techniques for structuring
complex interations among tasks (versus monitor and semaphore structuring approaches).

NOTE: FOR ALL TESTS, THE CORRECTNESS OF THE OUTPUT WAS SHOWN TO BE CORRECT THROUGH
MANUAL INVESTIGATION AS WELL AS COMPARISON TO OUTPUT FROM THE GIVEN EXECUTABLE.


ALGORITHM TESTING
  BESIDES TEST 1, ALL PROGRAM OUTPUT HAS BEEN OMITTED DUE TO LENGTH AND
  LACK OF READABILITY

  1. DATA DESCRIPTION
  The first attempt was run as follows: ./soda

  CONFIG FILE

  SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             2    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  TESTING
  Here is the script-fixed log of the testing performed.

  1%>linux028:~/cs343/CS343-A6> ./soda
  Parent  WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Mach1   Mach2   Cour0   

  ******* ******* ******* ******* ******* ******* ******* ******* ******* ******* ******* 
  S       S       S                                       S2                      S       
  D1,3    C0,5    R0      S       S       S2,5    S3,6            S2      S2              
  D1,2    W       R1              G5                                              t0,5    
  D1,1    C1,5    R2                                                                      
  D1,3            N0,0                    V0                                              
  D1,2            N1,1                            V1                                      
  D1,2                                                                                    
  D1,2                    P5      P                                                       
                          d0,5                            r                               
                          U0,15                                                           
  D1,3                    D0,0                            R                               
  D0,2                            G8                                                      
  D1,2                    P8      P                                                       
                          d0,8                            r                               
                          U0,7                                                            
  D1,1                    D0,0                            R                               
  D1,2                            G6                                                      
  D1,2                                                                                    
  D0,1                                                                                    
  D0,3                                                    B2,1                    T0,5    
  D0,2                                                                            t1,5    
                          P6      P                                               T1,5    
                          d0,6                            r                               
                          U0,4                                                            
  D1,1    W       N1,2    D0,2            B3      V2      R                               
                          d1,2                                    r                       
                          U1,18                                                           
  D1,3                    D1,0    G8      B1              B2,0    R                       
  D1,1                                                                                    
  D1,3                                                                                    
  D1,1            N1,0                            V0                                      
  D1,3    T0,7            P8      P                                                       
                          d0,8                            r                               
                          U0,5                                                            
  D1,1    W               D0,8                            R                       t0,7    
                          d1,8                                    r                       
                          U1,10                                                           
  D0,2                    D1,0    G5              B3      B3,4    R                       
  D1,2                                                                                    
  D0,2            N0,1                    V1                                      T0,7    
  D0,1            N0,2                    V2                                              
  D1,2                    P5      P               B1      B3,3                            
  D1,3                    d0,5                            r                               
                          U0,5                                                            
  D0,3                    D0,3                            R                               
                          d1,3                                    r                       
                          U1,7                                                            
  D1,3                    D1,0    G8                              R                       
  D0,3            N0,0                    V0                                              
  D0,2            N0,1                    V1                                              
  D0,2    T1,7                                                                            
  D1,1                    P8      P                                                       
                          d0,8                            r                               
                          U0,2                                                            
                          D0,5                                                    t1,7    
  D0,3    W               d1,5                            R       r               T1,7    
                          U1,5                                                            
  D0,2                    D1,3    G8              B6      B3,4    R                       
                          d2,3                                            r               
                          U2,17                                                           
  D0,1            N0,2    D2,0            V2                              R               
  D0,3                    P8      P                                                       
                          d0,8                            r                               
  D0,2                    D0,5                            R                               
                          d1,5                                    r                       
                          U1,5                                                            
  D0,3            N0,0    D1,5    G6      V0      B4      B3,4    R                       
                          d2,5                                            r               
                          U2,12                                                           
  D0,3                    D2,0    P       B6              B2,4            R               
                          P6                                                              
                          d0,6                            r                               
                          U0,1                                                            
  D0,1                    D0,5                            R                               
                          d1,5                                    r                       
                          U1,3                                                            
  D0,2                    D1,3    G7                              R                       
                          d2,3                                            r               
                          U2,11                                                           
  D1,2                    D2,2                                            R               
  D1,1                                    B4              B2,4                            
  D1,1                                            B2      B3,3                            
                                          B2              B2,3                            
  ...     ...     ...     ...     ...     F       ...     ...     ...     ...     ...     
  D0,1                                                                                    
  D0,3                                                                                    
  D1,2                    P7      P                                                       
                          d0,7                            r                               
                          U0,1                                                            
  D1,3                    D0,4                            R                               
                          d1,4                                    r                       
                          U1,3                                                            
  D0,1                    D1,4    G3              B0      B3,4                            
  ...     ...     ...     ...     ...     ...     F       ...     ...     ...     ...     
                          d2,4                                    R       r               
                          U2,10                                                           
  D0,2                    D2,3                                            R               
  D1,1                                                                                    
  D1,2                                                                                    
  D0,1                                                                                    
  ...     ...     ...     F       ...     ...     ...     ...     ...     ...     ...     
  D1,3                                                                                    
  ...     ...     ...     ...     F       ...     ...     ...     ...     ...     ...     
  D0,1                                                                                    
  ...     ...     ...     ...     ...     ...     ...     F       ...     ...     ...     
  D0,2                                                                                    
  ...     ...     ...     ...     ...     ...     ...     ...     F       ...     ...     
  D0,1                                                                                    
  ...     ...     ...     ...     ...     ...     ...     ...     ...     F       ...     
  D1,3                                                                                    
  ...     ...     F       ...     ...     ...     ...     ...     ...     ...     ...     
  D0,2                                                                                    
  ...     ...     ...     ...     ...     ...     ...     ...     ...     ...     F       
  D0,2                                                                                    
  ...     F       ...     ...     ...     ...     ...     ...     ...     ...     ...     
  D0,3                                                                                    
  F       ...     ...     ...     ...     ...     ...     ...     ...     ...     ...     
  ***********************


  ANALYSIS

  Although a bit difficult to examine due to formatting issues, the test
  shows the solution is correct with the provided soda.config. Although executed in a
  slightly different order than the test executable, it is clearly performing
  the correct tasks. 


  2. DATA DESCRIPTION
  The next attempt was run as follows: ./soda soda.config 1009

  CONFIG FILE

  SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             2    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  This test shows that command line arguments are parsed correctly and that consecutive runs with the same seed look
  similar.


  3. DATA DESCRIPTION
  The next attempt was run as follows: ./soda

  CONFIG FILE

  SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             1050    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test is to check that the program completes when there is a huge number of students.
  The program does terminate and seems to work fine.  The bottling plant and truck have to produce and ship a lot of
  bottles to keep up with demand, but all the students eventually manage to get their desired amount of soda.  Students
  also spend a lot of time waiting for parent to deposit money into their account.


  4. DATA DESCRIPTION
  The next attempt was run as follows: ./soda

  CONFIG FILE

  SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             2    # number of students to create
  MaxPurchases            300    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test is to check the behaviour when students want to purchase large amounts of soda.  It is
  similar to the large amount of students test, but the output is more readable.  The students are mostly waiting
  on parent to deposit money into their account so they can buy more soda.  The vending machines are mostly full, 
  because there is only a small number of students attempting to purchase, so the truck ends up cycling through all
  of the vending machines on each run.  The program completed with no deadlocks.


  5. DATA DESCRIPTION
  The next attempt was run as follows: ./soda

  CONFIG FILE

  SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             2    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      250    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test is to check the behaviour when there are a large number of vending machines.  The students
  spend most of their time looking for vending machines that have stock.  Most of the execution time appears to be from
  the truck restocking the vending machines.  The program completed with no deadlocks.


  6. DATA DESCRIPTION
  The next attempt was run as follows: ./soda

  CONFIG FILE

  SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             2    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    40    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test is to check that the truck behaves correctly when vending machines are full.  The machines
  fill up on the first delivery, and there are almost no unsuccessful deliveries.  The factory continues producing and
  the truck continues delivering, but the machines are almost always full.  The unused bottles are discarded.  Students
  have no problem finding their favourite soda and the program finishes quickly.

  7. DATA DESCRIPTION
  The next attempt was run as follows: ./soda

  CONFIG FILE

  SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             2    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      50    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    5    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test is to check what happens when the truck can't deliver much stock to a vending machine
  at once.  The truck never makes it past the first vending machine, so the students can only get their soda from
  there.  They cycle through the vending machines until they get to the one with stock.  After that, they buy their
  soda fairly quickly and the program terminates.

  8. DATA DESCRIPTION
  The next attempt was run as follows: ./soda

  CONFIG FILE

  SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             2    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      3    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    5    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    40    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test is to check what happens when the factory is slow.  There isn't much difference between
  this and the default configuration.  There appear to be more parent deposits.  Once stock is available, the students
  terminate quickly.

  9. DATA DESCRIPTION
  The ninth attempt was run as follows: ./soda

  CONFIG FILE:
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             2    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           200  # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test was to examine behaviour with a large amount of ParentalDelay.
  The results showed that the bottling plant, truck, and vending machines continued to
  function normally while the courier and student waited very long times for the parent
  to deposit enough money to make a withdrawal. The behaviour is as expected.

10. DATA DESCRIPTION
  The tenth attempt was run as follows: ./soda

  CONFIG FILE:
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             2    # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1000 # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test was to examine behaviour of a large amount of Couriers.
  The results showed that the couriers spent most of their time waiting for jobs and
  performing very little actual work. Everything else functioned normally.
  The behaviour is as expected.

11. DATA DESCRIPTION
  The eleventh attempt was run as follows: ./soda

  CONFIG FILE:
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             200  # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      200  # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test was to examine behaviour of a large number of Students coupled
  with a large number of vending machines. The results showed that the bottling plant and
  truck continued to function normally. Only a couple vending machines were active at a time
  and students spent the large majority of the time busy waiting between machines and waiting
  for parent deposits. The courier had a hard time keeping up with requests and spent alot of
  time waiting for parent deposits. The behaviour is as expected.

12. DATA DESCRIPTION
  The eleventh attempt was run as follows: ./soda

  CONFIG FILE:
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             200  # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             200  # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test was to examine behaviour of a large number of Students coupled
  with a large number of Couriers. The results showed that the bottling plant, vending machines, and
  truck continued to function normally. The couriers and students spent alot of time waiting for the parents
  to deposit money. The behaviour is as expected.

13. DATA DESCRIPTION
  The eleventh attempt was run as follows: ./soda

  CONFIG FILE:
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             200  # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      300  # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             200  # maximum number of couriers in the pool

  ANALYSIS

  This attempt was run as a stress test. The program completed after a very long
  time succesffully.

14. DATA DESCRIPTION
  The eleventh attempt was run as follows: ./soda

  CONFIG FILE:
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             200  # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    3    # length of time between shipment pickup
  ParentalDelay           200  # length of time between new deposits of funds
  NumCouriers             200  # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test was to examine behaviour of a large number of Students coupled
  with a large number of Couriers while having a large ParentalDelay. The program took a long
  time to complete because the couriers waited a ludicrous amount of time for parent deposits.
  The behaviour is as expected.

15. DATA DESCRIPTION
  The eleventh attempt was run as follows: ./soda

  CONFIG FILE:
    SodaCost                2    # Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents             200  # number of students to create
  MaxPurchases            8    # maximum number of bottles a student purchases
  NumVendingMachines      3    # number of vending machines
  MaxStockPerFlavour      5    # maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour    3    # maximum number of bottles of each flavour generated by the bottling
                               #    plant per production run
  TimeBetweenShipments    300  # length of time between shipment pickup
  ParentalDelay           2    # length of time between new deposits of funds
  NumCouriers             1    # maximum number of couriers in the pool

  ANALYSIS

  The purpose of this test was to examine behaviour of a large number of Students coupled
  with having a large TimeBetweenShipments. The program took a long time to complete because
  the students spent all of their time busy waiting between vending machines waiting for soda
  shipments. The behaviour is as expected.


CONCLUSION

  Clearly, the tests cover a wide range of scenarions and a wide range of parameter values.
  These tests undoubtedly confirm the correctness of the algorithm.